<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init variable for controller pause 

sprite = -1; // ! create variable that will store sprite index
paused = false; // pause set up false 
len = 0; // number of instances in current room
pause_list = -1; // list of element in pause
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DRAWING paused game instances and DRAW Pause sprite 

if paused 
{ 
// DRAWING paused game instances 
for (var i = 0; i &lt; len; i++;) 
{ 
ii = ds_list_find_value(pause_list, i); // we find instance_id in pause_list then 
// assign ii - variable from pause list 
if ii.sprite_index != -1 // if in {ii} contained instance data then begin 
{ 
draw_sprite_ext(ii.sprite_index, ii.image_index, ii.x, ii.y, 
ii.image_xscale, ii.image_yscale, ii.image_angle, ii.image_blend, 
ii.image_alpha); // check function in GML reference 
} // take instance sprite and draw him at function 
} 

// draw rectangle with definite fill color or outline color (choose it) 
draw_set_alpha(0.25); // level of transparency 
draw_rectangle_colour(0, 0, room_width, room_height, 
c_white, c_white, c_white, c_white, false); 



// DRAW Pause sprite 
draw_set_alpha(1); 
draw_sprite(spr_pause, 0, room_width / 2, room_height / 2); 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Push backspace code
paused = !paused; // game is paused, because i switch boolean variable 

// CONDITIONS when game is paused 
if paused 
{ 
len = instance_count; // remember instance count 
pause_list = ds_list_create(); // create data structure 
ds_list_clear(pause_list); // clear data structure 

for (var i = 0; i &lt; len; i++;) // standard loop "for" 
{ 
ds_list_add(pause_list, instance_id[i]); // 1-st is where to add value and 2-nd is definite instance config 
} // with id we can get access to instance 
instance_deactivate_all(true); 
} 

else 
{ 
ds_list_destroy(pause_list); // destroy data structure 
instance_activate_all(); // activate all instances in game_room 
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
